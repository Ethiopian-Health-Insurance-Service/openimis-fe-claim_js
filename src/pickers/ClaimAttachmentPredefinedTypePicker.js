import React, { useState } from "react";
import { useModulesManager, useTranslations, Autocomplete, useGraphqlQuery } from "@openimis/fe-core";
import { MODULE_NAME } from "../constants";

const ClaimAttachmentPredefinedTypePicker = ({
  onChange,
  readOnly,
  required,
  value,
  filterOptions,
  filterSelectedOptions,
  multiple,
  extraFragment,
  claimGeneralType,
  claimAttachmentType
}) => {
  const modulesManager = useModulesManager();
  const { formatMessage } = useTranslations(MODULE_NAME, modulesManager);
  const [variables, setVariables] = useState({});

  const { isLoading, data, error } = useGraphqlQuery(
    `
    query{ 
      claimAttachmentType(first: 20) 
      {        
        edges {
          node {
                id
                isAutogenerated
                claimGeneralType
                claimAttachmentType
                }
              }
      }    
    }    
  
    `,
    variables,
    { skip: true },
  );

  filterOptions = (options, state) =>{
    return options.filter(option => { return option.claimGeneralType===claimGeneralType})
  }

  return (
    <Autocomplete
      multiple={multiple}
      required={required}
      placeholder={formatMessage("claimAttachmentType.placeholder")}
      label={formatMessage("claim.claimAttachment.predefinedType")}
      error={error}
      withPlaceholder={true}
      readOnly={readOnly}
      options={data?.claimAttachmentType?.edges.map((edge) => edge.node) ?? []}
      isLoading={isLoading}
      value={value}
      getOptionLabel={(option) => `${option.claimAttachmentType}`}
      onChange={(currentValue) => onChange(currentValue, currentValue ? {"isAutogenerated": currentValue.isAutogenerated, 
                                                                         "claimAttachmentType": currentValue.claimAttachmentType,
                                                                         "id": currentValue.id
                                                                        } : null)}
      filterOptions={filterOptions}
      filterSelectedOptions={filterSelectedOptions}
      onInputChange={(search) => setVariables({ search, claimAttachmentType: claimAttachmentType })}
    />
  );
};

export default ClaimAttachmentPredefinedTypePicker;
